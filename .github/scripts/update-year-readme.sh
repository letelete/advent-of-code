#!/bin/bash

color_fg_accent="\x1b[35m"
color_fg_accent_light="\x1b[95m"
color_fg_default="\x1b[39m"
color_reset="\x1b[0m"

print() {
  echo -e "${color_fg_accent}[aoc]${color_fg_default} $1${color_reset}"
}

aoc_year="$1"
day_path="../../$aoc_year"
readme_file="README.md"

print "Running ./update-year-readme.sh"
print "aoc_year: $aoc_year"
print "day_path: $day_path"
print "readme_file: $readme_file"

table=""
if [ -x "./parse-year.sh" ]; then
  print "Running ./parse-year.sh"
  table=$(./parse-year.sh $aoc_year)

  if [ -z "$table" ]; then
    print "parse-year returned empty table"
    exit 1
  else
    print "Success"
    print -e "$table"
  fi
else
  print "parse-year.sh not found or not executable"
  exit 1
fi

output+="$table"$'\n\n'
output+="> Autogenerated using [Custom GitHub Action Workflow](https://github.com/letelete/advent-of-code/blob/496913f895327f7755c5f03117730239d2b912eb/.github/workflows/update-year-readme.yml)."$'\n'
output+="> Made by [Bruno Kawka](https://kawka.me)."$'\n'
output+=""$'\n'
output+="> Last update at $(date)"$'\n'

print "Reading file: $day_path/$readme_file"
if [[ ! -f "$day_path/$readme_file" ]]; then
  print "Error: $readme_file does not exist."
  exit 1
fi

file_content=$(<"$day_path/$readme_file")

before_stats=$(echo "$file_content" | awk '/^## Stats$/ {exit} {print}')
stats_section=$(echo "$file_content" | awk '/^## Stats$/,/^#/{if (!/^#/) print}')
after_stats=$(echo "$file_content" | awk '/^## Stats$/ {getline; while (!/^#/) getline; print; while (getline) print}')

new_content="${before_stats}\n
## Stats\n
${output}
${after_stats}"

print "Printing new content to the $day_path/$readme_file file"
print "${color_fg_accent_light}$new_content"
echo -e "$new_content" >"$day_path/$readme_file"
